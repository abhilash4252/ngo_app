c
@events
@events = Event.where(id: @allevents.collect { |p| p.id })
Event.where(id: @allevents.collect { |p| p.id })
@allevents
c
Event.where(id: @allevents.collect { |p| p.id })
@allevents.collect { |p| p.id }
@allevents.ids
@allevents.collect { |p| p.id }
Event.where (id: @allevents.collect { |p| p.id })
Event.where (id: =>  @allevents.collect { |p| p.id }
Event.where (id: =>  @allevents.collect { |p| p.id })
Event.find_all_by_id(  @allevents.collect { |p| p.id })
Events.find_all_by_id(  @allevents.collect { |p| p.id })
Events.include?  @allevents.collect { |p| p.id }
Events.where (:id  @allevents.collect { |p| p.id })
Events.where (:id , @allevents.collect { |p| p.id })
Events.where (id:, @allevents.collect { |p| p.id })
@allevents.collect { |p| p.id } 
@allevents.first.id
@allevents
Event.ids
Event.idss
@allevents.ids
@
@allevents
@allevents.first.date
@allevents.first
@allevents
@myevents
@allevents.where(":today > date", { today: Time.now.to_date})
@allevents
c
Event.find(@participation.event_id).date >= Time.nocw.to_date
Event.find(@participation.event_id).date >= Time.now.to_date
Event.find(@participation.event_id).date
Event.find(@participation.event_id)
Event.find(5)
@participation.event_id
@participation
c
z
@missedEvents.count == 0
@missedEvents == nil
@missedEvents
c
@upcomingEvents
@missedEvents
@participating
c
@participating.where("date >= :today",{today: Time.now.to_date})
@participating.where("date < :today",{today: Time.now.to_date})
@participating.where("date <= :today",{today: Time.now.to_date})
@participating.where("date > :today",{today: Time.now.to_date})
@participating
@participating.each do |p| puts  p.date end
@participating.each |p| { p.date }
@participating.each { |p| if Time.now.to_date>p.date { @missed = p } }
@participating.all
@participating.each.date
@participating.each do |p|
@participating
c
Time.now.to_date > p.date
Time.now.to_date
p.date
p
c
Participation.where(event_id: params[:id],user_id: current_user.id).first.destroy
Participation.where(event_id: params[:id],user_id: current_user.id).first.destry
Participation.where(event_id: params[:id],user_id: current_user.id).first
Participation.where(event_id: params[:id],user_id: current_user.id)
params
Participation.where(event_id: params[:id],user_id: current_user.id).user_id
Participation.where(event_id: params[:id],user_id: current_user.id)
Participation.find(Participation.where(event_id: params[:id],user_id: current_user.id))
Participation.find(
Participation.where(event_id: params[:id],user_id: current_user.id).destroy
Participation.where(event_id: params[:id],user_id: current_user.id)
Participation.where(event_id: params[:id],user_id: current_user.id).id
Participation.where(event_id: params[:id],user_id: current_user.id)
params
c
Participation.where(event_id: params[:id],user_id: current_user.id)
Participation.where(event_id: params[:id])
Participation.all
Participation.find(params[:id])
params
c
current_user.organisations.ids.include?params[:organisation_id].to_i
params[:organisation_id].to_i
params[:organisation_id]
params[:organisatio_id]
params
c
params
current_user.organisations.ids
current_user.organisations
params
@current_organisation
c
params[:user_id]
current_user.id
current_user.id == params[:user_id]
current_user.id.to_s == params[:user_id]
c
current_user.id.to_s == params[:user_id]
current_user.id == params[:user_id]
current_user.id
params[:user_id]
current_user
params
c
@participants
n
@event.participants
@event
Event
c
params
c
user_signed_in?
current_user
c
current_user
c
current_user
c
current_user
c
current_user
c
@organisation
current_user
c
current_user.organisations.new
current_user.organisations
current_user
params
c
@participants.collect{|u| u. user_id }
@participants.collect{|u|  user_id }
@participants.collect{ user_id }
@participants
c
@participants
c
Participation.where(event_id: 1).collect { |u| u.user_id }
Participation.where(event_id: 1).user_id
Participation.where(event_id: 1).user_ids
Participation.where(event_id: 1)
Participation.where(event_id: 3)
Participation.all
Participation
Paricipation
Participation.where(event_id: @event.id)
@event
c
my
user_organisation_event_path(current_user.id,my.organisation_id,my.id)
user_organisation_event_path(current_user.id,my.organisation_id,my.event_id)
my=Event.where(organisation_id: current_user.organisations.ids)
)
user_organisation_event_path
Event.where(organisation_id: current_user.organisations.ids)
Event
current_user.organisations.ids
current_user.organisations
current_user
c
cp = current_user.participations.collect { |p| p.event_id }c
current_user.participations
cp
Event.all - Event.where(id: cp)
Event.where(id: cp)
Event.all - Event.where(id: cp)
Event.all - Event.where(:id, cp)
Event.all - Event.find_by(:id => cp)
Event.find_by(:id => cp)
Event.find_by(id,cp)
Event.find_by(:id,cp)
Event.find_all_by_id(1)
Event.find_by_id(1)
Event.find(1)
Event.find_all_by_id(cp)
cp
Event.where(:id,cp)
Event.where(cp,Event.ids)
cp
Event.ids
Event.where(Event.ids,cp)
Event.where(:event_id,cp)
Event.where(:even_id,cp)
cp = current_user.participations.collect { |p| p.event_id }
cp
cp.count
cp = current_user.participations
current_user.participations
c
params[:event_id]
Eve
params
@participation.errors
@participation.erros
n
@participation
c
current_user.participation.new
Participation.find(params[:event_id])
params[:event_id]
params
c
even.id
event
params
c
event
current_user
c
s
a
s
y
n
@allevents
event
continue
event
continue
u
y
n
Organisation.find(params[:organisation_id]).events.new
current_user.Organisation.find(params[:organisation_id])
Organisation.find(params[:organisation_id])
params[:id]
params(:id)
params
Organisation.find(params[:id])
current_user.organisations
current_user.organisation
current_user.events.new
current_user.id
current_user.organisation.id
current_user.organisations.id
current_user.organisations
current_user.organisation
current_user
c
params
